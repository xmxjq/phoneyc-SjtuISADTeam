
                        
var startTime = new Date().getTime();
var loadTime = null;
;;
                  var av = false;
                  if (av) {
                     document.getElementById("static").style.display = "none";
                  }
              ;;
var perceivedAd = 6;
var actualAd = perceivedAd;
var timeoutLimit = 4000;
var crumb = "aiOaquKc8dg";
var verify = 0;
var partner = "";
var src = "ym";
var intl = "us";
YAHOO.ads.adWidth = 1920;
;;
browser_string = navigator.appVersion + " " + navigator.userAgent;
if ( browser_string.indexOf("MSIE") < 0 ) {
	if (navigator.mimeTypes) {
		for (i = 0 ; i < navigator.mimeTypes.length ; i++) {
			if (navigator.mimeTypes[i].suffixes.indexOf("yps") > -1) {
				 doGotIt();
			}
		}
	} else {
		dontGotIt();
	}
} else {
	if (browser_string.indexOf("Windows")>=0) {
		doGotIt();
		document.write('<object classid="clsid:41695A8E-6414-11D4-8FB3-00D0B7730277" CODEBASE="javascript:dontGotIt();" ID="Ymsgr" width="1" height="1">');
		document.write('');
	}
}
hasMsgr = 0;
function dontGotIt(){
  hasMsgr = 0;
  document.login_form.hasMsgr.value=0;
}
function doGotIt(){
  hasMsgr = 1;
  document.login_form.hasMsgr.value=1;
}

YAHOO.namespace("membership");
YAHOO.membership.setFocus = function(e, id){
  var fid = id ? id : "username";
  var el = document.forms["login_form"].elements;
  var f = false;
  var len = el.length;
  for(var i=0; i< len; i++){    var c = el[i];
    if(c.type == 'text' || c.type == 'password'){
      if(c.value != c.defaultValue){
        return false;
      }
    }
    if(c.id == fid){
      f = true;
    }
  }
  if(f){
    document.getElementById(fid).focus();
  }
}


YAHOO.util.Event.addListener(window, "load", YAHOO.membership.setFocus);

if(typeof YAHOO=="undefined"){YAHOO={};}
YAHOO.namespace("membership");
YAHOO.membership.showError = function(toShowText){
    var errs = YAHOO.util.Dom.getElementsByClassName('yregertxt');
    for(var i=0; i< errs.length; i++){    errs[i].parentNode.removeChild(errs[i]);
    }
    var fs = document.getElementById('fsLogin');
    var errMsg = document.createElement('div');
    errMsg.innerHTML = toShowText;
    errMsg.className = 'yregertxt';
    fs.insertBefore(errMsg, fs.firstChild);
}

YAHOO.membership.checkInputs = function(e, toCheck){
    var id = document.getElementById(toCheck['username']);
    var pw = document.getElementById(toCheck['password']);
    var pwVal = pw.value;
    if (!id) {
        if (pwVal == '') {
             YAHOO.util.Event.preventDefault(e);
             pw.focus();
             YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
             YAHOO.membership.showError('Please enter your password');
        }
    } else {
        var idVal = id.value;
        if (pwVal == '' && idVal == ''){
            YAHOO.util.Event.preventDefault(e);
            YAHOO.util.Dom.setStyle(pw, 'background-color', '#ffefef');
            YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
            YAHOO.membership.showError('Invalid ID or password.> Please try again using your full Yahoo! ID.');
            id.focus();
          }else if(pwVal == '' && idVal != ''){
            YAHOO.util.Event.preventDefault(e);
            pw.focus();
            YAHOO.util.Dom.setStyle(id, 'background-color', '');
            YAHOO.util.Dom.setStyle(pw, 'background-color', '#ffefef');
            YAHOO.membership.showError('<strong>Please enter your password<strong>');
          }else if(pwVal != '' && idVal == ''){
            YAHOO.util.Event.preventDefault(e);
            id.focus();
            YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
            YAHOO.util.Dom.setStyle(pw, 'background-color', '');
            YAHOO.membership.showError('Please verify your Yahoo! ID');
          }
    }
}

YAHOO.util.Event.addListener('.save', 'click', YAHOO.membership.checkInputs, {'username':'username', 'password':'passwd'});
if(typeof YAHOO=="undefined"){YAHOO={};}
var Y = YAHOO;
Y.doUpgradeCheck = function(){
  var plugin, activex, version, params = [];

  if (navigator.plugins && navigator.plugins.length > 0) {
      plugin = navigator.plugins['Shockwave Flash 2.0'] ||
               navigator.plugins['Shockwave Flash'];

      if (plugin && plugin.description) {
          version = plugin.description.replace(/([a-zA-Z]|\s)+/, '').replace(/(\s+r|\s+b[0-9]+)/, '.').split('.');
      }
  } else {
      try {
          activex = new ActiveXObject('ShockwaveFlash.ShockwaveFlash.7');
          version = activex.GetVariable('\$version').split(' ')[1].split(',');
      } catch (e1) {
          try {
              activex = new ActiveXObject('ShockwaveFlash.ShockwaveFlash.6');
              version = [6, 0, 21];
              activex.AllowScriptAccess = 'always';
              version = activex.GetVariable('\$version').split(' ')[1].split(',');
          } catch (e2) {}
      }
  }

  if(version){
      var major = parseInt(version[0], 10);
      var minorA = parseInt(version[1], 10);
      var minorB = parseInt(version[2], 10);
      var strVersion = major + "." + minorA + "." + minorB;

      if(major >= 10){
        //ok
      }else if(major == 9){
        if(minorA == 0 && minorB < 28){
          Y.showUpgradeCTA(strVersion);
        }
      }else if(major == 8){
        if(minorA == 0 && minorB < 34){
          Y.showUpgradeCTA(strVersion);
        }
      }else if(major == 7){
        if(minorA == 0 && minorB < 69){
          Y.showUpgradeCTA(strVersion);
        }
      }else{
        Y.showUpgradeCTA(strVersion);
      }
    }

}
Y.showUpgradeCTA = function(version){
  try{
    var fun = document.getElementById('fun');
    var imgUrl = "https://s.yimg.com/lq/i/nt/ic/ut/bsc/cautionmetro16_1.gif";
    var beaconUrl = 'https://login.yahoo.com/i/flashUp/ft.gif' + '?v=' + version + '=' + 'us';
    fun.innerHTML = "Security Alert: Protect your account. Upgrade your Adobe Flash Player.";
    fun.style.paddingBottom = '12px';
    fun.style.display = 'block';
  }catch(e){}
}

if(window.addEventListener){
window.addEventListener("load", Y.doUpgradeCheck, false);
}else{
window.attachEvent("onload", Y.doUpgradeCheck);
}

;;
    
function checkBrowser(){
    var appName = navigator.appName;
    if( appName == "Microsoft Internet Explorer" )
    {
        // this only works in IE 5 for windows and higher ...
        if( navigator.appVersion.indexOf("Windows") == -1 )
            return -1;
        var appVersionAry = navigator.appVersion.split("(");
        if( appVersionAry.length < 2 )
            return -1;
        var appVersion = appVersionAry[1];
        appVersionAry = appVersion.split("; ");
        if( appVersionAry.length < 2 )
            return -1;
        appVersion = appVersionAry[1];
        appVersionAry = appVersion.split(" ");
        if( appVersionAry.length < 2 )
            return -1;
        appVersion = appVersionAry[1];
        var appVersionNumber = parseInt(appVersion);

        if( appVersionNumber < 5 )
            return -1;
    }
    else
    {
        return -1;
    }
}

;;


function flashCacheReady (initialized){ //invoked directly by Flash
    var inCache = false;
 
  // Get the info from flash
  var o={};
  o=(document.getElementById("flashCache")).getCache(o);
  if(o != null) inCache = true; 
  else return;

  if(o.YL != 'null' && o.YL != null) {
    document.cookie = o.YL + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=login.yahoo.com;path=/";
  }

  if(o.F != 'null' && o.F != null) {
    document.cookie = o.F + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=.yahoo.com;path=/";
  }

  if(o.YLS != 'null' && o.YLS != null) {
    if((o.YLS.match("n=0")) != null) {
      o.YLS = o.YLS.replace("n=0", "n=9");
    } else {
      o.YLS = o.YLS.concat("&n=9");
    }
    document.cookie = o.YLS + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=.yahoo.com;path=/";
  }

  if(((o.YL != 'null') && (o.YL != null)) || ((o.F != 'null') && (o.F != null)) && (document.cookie.length > 0)) {
    location.replace (document.location + "&rl=1"); 
  }

  // If the browser is IE, get from the xml cache as well.
 
if((checkBrowser() != -1)) {
  function getXML(cookieName,header,spanName)
  {
      var span = document.getElementById("cache");
      span.style.behavior = "url('#default#userData')";
      span.load(spanName);
  
      var ckyDate = new Date;
      ckyDate.setDate(ckyDate.getDate( ) + 7);
 
      var saved = span.getAttribute("saved"+cookieName);

      if((saved == null ) || (saved == "")) return -1;
      var cookieStr = saved;
      if(cookieName == "YLS") {
        if((cookieStr.match("n=0")) != null) {
          cookieStr = cookieStr.replace("n=0", "n=9");
        } else {
          cookieStr = cookieStr.concat("&n=9");
        }
      }
      if (header != ""){
          cookieStr = cookieStr + ';' + header;
      }
      document.cookie = cookieStr;
      return 0;
  }

  var ylRes = getXML("YL", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=login.yahoo.com; path=/", "YL");
  var fRes = getXML("F", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=.yahoo.com; path=/", "YL");
  var ylsRes = getXML("YLS", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=.yahoo.com; path=/", "YL");

  if(ylRes == 0 || fRes == 0 && (document.cookie.length > 0)) {
    location.replace (document.location + "&rl=1");
  }
}
    }
;;

function FlashDetector_Detect(targetVersion)
{
  var pObj = null;
  var tokens, len, curr_tok;
  var hasVersion = -1;
  var playable = false;
  if(navigator.mimeTypes && navigator.mimeTypes['application/x-shockwave-flash'])
  {
     pObj = navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin;
  }
  if(pObj != null)
  {
     tokens = navigator.plugins['Shockwave Flash'].description.split(' ');
     len = tokens.length;
     while(len--)
     {
	curr_tok = parseInt( tokens[len] );

        if(!isNaN( curr_tok) )
        {
           hasVersion = curr_tok;
           FlashDetector_Version = curr_tok;
           break;
        }
     }
     if(hasVersion >= targetVersion)
     {
        playable = true;
     }
     else
     {
        playable = false;
     }
  }
  return playable;
}

var flashDetector_Playable = false;
var flashDetector_targetVersion = '8'; 

var isIE  = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false;
var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false;
var isOpera = (navigator.userAgent.indexOf("Opera") != -1) ? true : false;
  
if (isIE && isWin && !isOpera) {
    document.write('<scr' + 'ipt language="VBScript"\> \n');
    document.write('on error resume next \n');
    document.write('flashDetector_Playable = ( IsObject(CreateObject("ShockwaveFlash.ShockwaveFlash." & flashDetector_targetVersion)))\n');
    document.write(' \n');
  } else {
      flashDetector_Playable = FlashDetector_Detect(flashDetector_targetVersion);
  }

  var flashCode = '';

  if(flashDetector_Playable) {
 
    var ts = (new Date()).getTime( );

    flashCode = '     ';

  }
  document.write(flashCode);

;;
                        
var startTime = new Date().getTime();
var loadTime = null;
;;
                  var av = false;
                  if (av) {
                     document.getElementById("static").style.display = "none";
                  }
              ;;
var perceivedAd = 6;
var actualAd = perceivedAd;
var timeoutLimit = 4000;
var crumb = "aiOaquKc8dg";
var verify = 0;
var partner = "";
var src = "ym";
var intl = "us";
YAHOO.ads.adWidth = 1920;
;;
browser_string = navigator.appVersion + " " + navigator.userAgent;
if ( browser_string.indexOf("MSIE") < 0 ) {
	if (navigator.mimeTypes) {
		for (i = 0 ; i < navigator.mimeTypes.length ; i++) {
			if (navigator.mimeTypes[i].suffixes.indexOf("yps") > -1) {
				 doGotIt();
			}
		}
	} else {
		dontGotIt();
	}
} else {
	if (browser_string.indexOf("Windows")>=0) {
		doGotIt();
		document.write('<object classid="clsid:41695A8E-6414-11D4-8FB3-00D0B7730277" CODEBASE="javascript:dontGotIt();" ID="Ymsgr" width="1" height="1">');
		document.write('');
	}
}
hasMsgr = 0;
function dontGotIt(){
  hasMsgr = 0;
  document.login_form.hasMsgr.value=0;
}
function doGotIt(){
  hasMsgr = 1;
  document.login_form.hasMsgr.value=1;
}

YAHOO.namespace("membership");
YAHOO.membership.setFocus = function(e, id){
  var fid = id ? id : "username";
  var el = document.forms["login_form"].elements;
  var f = false;
  var len = el.length;
  for(var i=0; i< len; i++){    var c = el[i];
    if(c.type == 'text' || c.type == 'password'){
      if(c.value != c.defaultValue){
        return false;
      }
    }
    if(c.id == fid){
      f = true;
    }
  }
  if(f){
    document.getElementById(fid).focus();
  }
}


YAHOO.util.Event.addListener(window, "load", YAHOO.membership.setFocus);

if(typeof YAHOO=="undefined"){YAHOO={};}
YAHOO.namespace("membership");
YAHOO.membership.showError = function(toShowText){
    var errs = YAHOO.util.Dom.getElementsByClassName('yregertxt');
    for(var i=0; i< errs.length; i++){    errs[i].parentNode.removeChild(errs[i]);
    }
    var fs = document.getElementById('fsLogin');
    var errMsg = document.createElement('div');
    errMsg.innerHTML = toShowText;
    errMsg.className = 'yregertxt';
    fs.insertBefore(errMsg, fs.firstChild);
}

YAHOO.membership.checkInputs = function(e, toCheck){
    var id = document.getElementById(toCheck['username']);
    var pw = document.getElementById(toCheck['password']);
    var pwVal = pw.value;
    if (!id) {
        if (pwVal == '') {
             YAHOO.util.Event.preventDefault(e);
             pw.focus();
             YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
             YAHOO.membership.showError('Please enter your password');
        }
    } else {
        var idVal = id.value;
        if (pwVal == '' && idVal == ''){
            YAHOO.util.Event.preventDefault(e);
            YAHOO.util.Dom.setStyle(pw, 'background-color', '#ffefef');
            YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
            YAHOO.membership.showError('Invalid ID or password.> Please try again using your full Yahoo! ID.');
            id.focus();
          }else if(pwVal == '' && idVal != ''){
            YAHOO.util.Event.preventDefault(e);
            pw.focus();
            YAHOO.util.Dom.setStyle(id, 'background-color', '');
            YAHOO.util.Dom.setStyle(pw, 'background-color', '#ffefef');
            YAHOO.membership.showError('<strong>Please enter your password<strong>');
          }else if(pwVal != '' && idVal == ''){
            YAHOO.util.Event.preventDefault(e);
            id.focus();
            YAHOO.util.Dom.setStyle(id, 'background-color', '#ffefef');
            YAHOO.util.Dom.setStyle(pw, 'background-color', '');
            YAHOO.membership.showError('Please verify your Yahoo! ID');
          }
    }
}

YAHOO.util.Event.addListener('.save', 'click', YAHOO.membership.checkInputs, {'username':'username', 'password':'passwd'});
if(typeof YAHOO=="undefined"){YAHOO={};}
var Y = YAHOO;
Y.doUpgradeCheck = function(){
  var plugin, activex, version, params = [];

  if (navigator.plugins && navigator.plugins.length > 0) {
      plugin = navigator.plugins['Shockwave Flash 2.0'] ||
               navigator.plugins['Shockwave Flash'];

      if (plugin && plugin.description) {
          version = plugin.description.replace(/([a-zA-Z]|\s)+/, '').replace(/(\s+r|\s+b[0-9]+)/, '.').split('.');
      }
  } else {
      try {
          activex = new ActiveXObject('ShockwaveFlash.ShockwaveFlash.7');
          version = activex.GetVariable('\$version').split(' ')[1].split(',');
      } catch (e1) {
          try {
              activex = new ActiveXObject('ShockwaveFlash.ShockwaveFlash.6');
              version = [6, 0, 21];
              activex.AllowScriptAccess = 'always';
              version = activex.GetVariable('\$version').split(' ')[1].split(',');
          } catch (e2) {}
      }
  }

  if(version){
      var major = parseInt(version[0], 10);
      var minorA = parseInt(version[1], 10);
      var minorB = parseInt(version[2], 10);
      var strVersion = major + "." + minorA + "." + minorB;

      if(major >= 10){
        //ok
      }else if(major == 9){
        if(minorA == 0 && minorB < 28){
          Y.showUpgradeCTA(strVersion);
        }
      }else if(major == 8){
        if(minorA == 0 && minorB < 34){
          Y.showUpgradeCTA(strVersion);
        }
      }else if(major == 7){
        if(minorA == 0 && minorB < 69){
          Y.showUpgradeCTA(strVersion);
        }
      }else{
        Y.showUpgradeCTA(strVersion);
      }
    }

}
Y.showUpgradeCTA = function(version){
  try{
    var fun = document.getElementById('fun');
    var imgUrl = "https://s.yimg.com/lq/i/nt/ic/ut/bsc/cautionmetro16_1.gif";
    var beaconUrl = 'https://login.yahoo.com/i/flashUp/ft.gif' + '?v=' + version + '=' + 'us';
    fun.innerHTML = "Security Alert: Protect your account. Upgrade your Adobe Flash Player.";
    fun.style.paddingBottom = '12px';
    fun.style.display = 'block';
  }catch(e){}
}

if(window.addEventListener){
window.addEventListener("load", Y.doUpgradeCheck, false);
}else{
window.attachEvent("onload", Y.doUpgradeCheck);
}

;;
    
function checkBrowser(){
    var appName = navigator.appName;
    if( appName == "Microsoft Internet Explorer" )
    {
        // this only works in IE 5 for windows and higher ...
        if( navigator.appVersion.indexOf("Windows") == -1 )
            return -1;
        var appVersionAry = navigator.appVersion.split("(");
        if( appVersionAry.length < 2 )
            return -1;
        var appVersion = appVersionAry[1];
        appVersionAry = appVersion.split("; ");
        if( appVersionAry.length < 2 )
            return -1;
        appVersion = appVersionAry[1];
        appVersionAry = appVersion.split(" ");
        if( appVersionAry.length < 2 )
            return -1;
        appVersion = appVersionAry[1];
        var appVersionNumber = parseInt(appVersion);

        if( appVersionNumber < 5 )
            return -1;
    }
    else
    {
        return -1;
    }
}

;;


function flashCacheReady (initialized){ //invoked directly by Flash
    var inCache = false;
 
  // Get the info from flash
  var o={};
  o=(document.getElementById("flashCache")).getCache(o);
  if(o != null) inCache = true; 
  else return;

  if(o.YL != 'null' && o.YL != null) {
    document.cookie = o.YL + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=login.yahoo.com;path=/";
  }

  if(o.F != 'null' && o.F != null) {
    document.cookie = o.F + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=.yahoo.com;path=/";
  }

  if(o.YLS != 'null' && o.YLS != null) {
    if((o.YLS.match("n=0")) != null) {
      o.YLS = o.YLS.replace("n=0", "n=9");
    } else {
      o.YLS = o.YLS.concat("&n=9");
    }
    document.cookie = o.YLS + ";expires=Thu, 15 Apr 2037 20:00:00 GMT;domain=.yahoo.com;path=/";
  }

  if(((o.YL != 'null') && (o.YL != null)) || ((o.F != 'null') && (o.F != null)) && (document.cookie.length > 0)) {
    location.replace (document.location + "&rl=1"); 
  }

  // If the browser is IE, get from the xml cache as well.
 
if((checkBrowser() != -1)) {
  function getXML(cookieName,header,spanName)
  {
      var span = document.getElementById("cache");
      span.style.behavior = "url('#default#userData')";
      span.load(spanName);
  
      var ckyDate = new Date;
      ckyDate.setDate(ckyDate.getDate( ) + 7);
 
      var saved = span.getAttribute("saved"+cookieName);

      if((saved == null ) || (saved == "")) return -1;
      var cookieStr = saved;
      if(cookieName == "YLS") {
        if((cookieStr.match("n=0")) != null) {
          cookieStr = cookieStr.replace("n=0", "n=9");
        } else {
          cookieStr = cookieStr.concat("&n=9");
        }
      }
      if (header != ""){
          cookieStr = cookieStr + ';' + header;
      }
      document.cookie = cookieStr;
      return 0;
  }

  var ylRes = getXML("YL", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=login.yahoo.com; path=/", "YL");
  var fRes = getXML("F", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=.yahoo.com; path=/", "YL");
  var ylsRes = getXML("YLS", "expires = Thu, 15 Apr 2037 20:00:00 GMT; domain=.yahoo.com; path=/", "YL");

  if(ylRes == 0 || fRes == 0 && (document.cookie.length > 0)) {
    location.replace (document.location + "&rl=1");
  }
}
    }
;;

function FlashDetector_Detect(targetVersion)
{
  var pObj = null;
  var tokens, len, curr_tok;
  var hasVersion = -1;
  var playable = false;
  if(navigator.mimeTypes && navigator.mimeTypes['application/x-shockwave-flash'])
  {
     pObj = navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin;
  }
  if(pObj != null)
  {
     tokens = navigator.plugins['Shockwave Flash'].description.split(' ');
     len = tokens.length;
     while(len--)
     {
	curr_tok = parseInt( tokens[len] );

        if(!isNaN( curr_tok) )
        {
           hasVersion = curr_tok;
           FlashDetector_Version = curr_tok;
           break;
        }
     }
     if(hasVersion >= targetVersion)
     {
        playable = true;
     }
     else
     {
        playable = false;
     }
  }
  return playable;
}

var flashDetector_Playable = false;
var flashDetector_targetVersion = '8'; 

var isIE  = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false;
var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false;
var isOpera = (navigator.userAgent.indexOf("Opera") != -1) ? true : false;
  
if (isIE && isWin && !isOpera) {
    document.write('<scr' + 'ipt language="VBScript"\> \n');
    document.write('on error resume next \n');
    document.write('flashDetector_Playable = ( IsObject(CreateObject("ShockwaveFlash.ShockwaveFlash." & flashDetector_targetVersion)))\n');
    document.write(' \n');
  } else {
      flashDetector_Playable = FlashDetector_Detect(flashDetector_targetVersion);
  }

  var flashCode = '';

  if(flashDetector_Playable) {
 
    var ts = (new Date()).getTime( );

    flashCode = '     ';

  }
  document.write(flashCode);

;;